# docker-compose-dev.yml
services:

  backend:
    build:
      context: .
      args:
        DEBUG: "true"
    env_file:
      - .env.sample
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    working_dir: /backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17.1
    restart: always
    env_file:
      - .env.sample
    ports:
      - "5435:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "devdb", "-U", "devuser"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6381:6379"
  mq:
    env_file:
      - .env.sample
    image: rabbitmq:3.13.7-alpine

  worker:
    build:
      context: .
    env_file:
      - .env.sample
    volumes:
      - ./backend:/backend
    command: >
      sh -c "celery -A app.celery worker -l INFO"
    depends_on:
      - backend
      - mq
volumes:
  db-data:
